# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

minimum_pre_commit_version: '2.9.2'

default_language_version:
  python: python3

default_stages: [commit]


repos:
# Meta checks
- repo: meta
  hooks:
  - id: check-useless-excludes

# General fixers
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.0.1
  hooks:
  - id: trailing-whitespace
    exclude_types: [svg]
  - id: mixed-line-ending
    name: Normalize mixed line endings
    args: [--fix=lf]
    exclude_types: [batch]
  - id: end-of-file-fixer
    exclude_types: [svg]
  - id: fix-byte-order-marker
    name: Remove Unicode BOM

# More general fixers
- repo: https://github.com/Lucas-C/pre-commit-hooks
  rev: v1.1.10
  hooks:
  - id: remove-tabs
    name: Replace tabs with spaces
    types: [text]
    exclude_types: [svg, batch]
    args: [--whitespaces-count, '4']

# Check and fix spelling
- repo: https://github.com/codespell-project/codespell
  rev: v2.1.0
  hooks:
  # Define separate hooks for checking and correcting spelling errors
  # since codespell doesn't print verbose output when writing changes
  - id: codespell
    name: Check spelling
    exclude: '\.gitattributes'
    args: ['-L', 'complet,generat']
  - id: codespell
    name: Fix spelling
    exclude: '\.gitattributes'
    args: ['-L', 'complet,generat', --write-changes]

# Pretty-format INI
- repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  rev: v2.1.0
  hooks:
  - id: pretty-format-ini
    name: Format INI
    types: [ini]
    args: [--autofix]

# Check JSON
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.0.1
  hooks:
  - id: check-json

# Add doctoc to Markdown
- repo: https://github.com/thlorenz/doctoc
  rev: v2.0.1
  hooks:
  - id: doctoc
    name: Generate Markdown ToCs
    args: [--maxlevel, '3', --update-only]

# Lint Markdown
- repo: https://github.com/igorshubovych/markdownlint-cli
  rev: v0.28.1
  hooks:
  - id: markdownlint
    name: Lint Markdown
    args: [--fix]

# Format packaging
- repo: https://github.com/asottile/setup-cfg-fmt
  rev: v1.17.0
  hooks:
  - id: setup-cfg-fmt
    name: Format packaging with setup-cfg-fmt

# Check packaging
- repo: https://github.com/regebro/pyroma
  rev: '3.2'
  hooks:
  - id: pyroma

# Fix Python
- repo: https://github.com/asottile/pyupgrade
  rev: v2.24.0
  hooks:
  - id: pyupgrade
    name: Fix Python with Pyupgrade
    args: ['--py37-plus', '--keep-runtime-typing']

- repo: local
  hooks:
  - id: fixit
    name: Fix Python with FixIt
    entry: python -m fixit.cli.apply_fix
    language: python
    types: [python]
    require_serial: true
    additional_dependencies:
    - 'fixit == 0.1.4'

- repo: https://github.com/hakancelikdev/unimport
  rev: '0.8.3'
  hooks:
  - id: unimport
    name: Fix Python with Unimport
    args: [--remove]

- repo: https://github.com/Lucas-C/pre-commit-hooks
  rev: v1.1.10
  hooks:
  - id: remove-crlf
    name: Replace CRLF with LF post-Unimport
    types: [python]

# Format Python
- repo: https://github.com/psf/black
  rev: '21.7b0'
  hooks:
  - id: black
    name: Format Python with Black

- repo: https://github.com/asottile/add-trailing-comma
  rev: v2.1.0
  hooks:
  - id: add-trailing-comma
    args: [--py36-plus]

- repo: https://github.com/pycqa/isort
  rev: '5.9.3'
  hooks:
  - id: isort
    name: Format Python imports with isort

# Check Python
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.0.1
  hooks:
  - id: check-ast
    name: Check Python
  - id: name-tests-test
    name: Check that test files start with test
    args: ['--django']

- repo: https://github.com/pre-commit/pygrep-hooks
  rev: v1.9.0
  hooks:
  - id: python-check-blanket-type-ignore
    name: Check blanket type ignore
  - id: python-check-mock-methods
    name: Check for bad mock methods
  - id: python-no-log-warn
    name: Check for logger.warn

- repo: https://github.com/Lucas-C/pre-commit-hooks-safety
  rev: v1.2.1
  hooks:
  - id: python-safety-dependencies-check
    name: Run Safety check on dependencies
    files: 'requirements.txt'

# Lint Python
- repo: https://github.com/pycqa/flake8
  rev: '3.9.2'
  hooks:
  - id: flake8
    name: Lint Python with Flake8
    require_serial: true
    additional_dependencies:
    - 'dlint == 0.11.0'
    - 'flake8-2020 == 1.6.0'
    - 'flake8-pytest-style == 1.5.0'
    - 'pydocstyle == 6.1.1'
    - 'wemake-python-styleguide == 0.15.3'

- repo: https://github.com/PyCQA/bandit
  rev: '1.7.0'
  hooks:
  - id: bandit
    name: Lint Python security with Bandit
    args: ['-c', '.bandit.yml']
    require_serial: true

- repo: local
  hooks:
  - id: check-env-activated
    name: Check that a suitable Python env is activated
    entry: 'python tools/check_env_activated.py'
    language: system
    types: [python]
    pass_filenames: false
  - id: enable-praw-typehints
    name: Enable PRAW type hints
    entry: 'python tools/enable_praw_typehints.py'
    language: system
    types: [python]
    pass_filenames: false
  - id: mypy
    name: Lint Python with MyPy
    entry: 'mypy .'
    language: system
    types: [python]
    pass_filenames: false
  - id: pyanalyze
    name: Lint Python with PyAnalyze
    entry: 'python -b -X dev -W error -m pyanalyze .'
    args: [--autofix, --enable-all, '-d', invalid_annotation, '-d', unsupported_operation]
    language: system
    types: [python]
    pass_filenames: false
  - id: pylint
    name: Lint Python with Pylint
    entry: pylint
    language: system
    types: [python]

# Check TOML
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.0.1
  hooks:
  - id: check-toml

# Pretty-format YAML
- repo: https://github.com/macisamuele/language-formatters-pre-commit-hooks
  rev: v2.1.0
  hooks:
  - id: pretty-format-yaml
    name: Format Yaml
    args: [--autofix, --indent, '2', --preserve-quotes]

# Check YAML
- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.0.1
  hooks:
  - id: check-yaml

# Lint YAML
- repo: https://github.com/adrienverge/yamllint.git
  rev: v1.26.3
  hooks:
  - id: yamllint
    name: Lint Yaml
    types: [yaml]
    args: [-s, -f, colored]

# Replace CRLF with LF post-prettify
- repo: https://github.com/Lucas-C/pre-commit-hooks
  rev: v1.1.10
  hooks:
  - id: remove-crlf
    name: Replace CRLF with LF post-prettify
    types: [text]
    exclude_types: [batch]


# General checkers

- repo: https://github.com/pre-commit/pygrep-hooks
  rev: v1.9.0
  hooks:
  - id: text-unicode-replacement-char
    name: Check for Unicode replacement chars

- repo: https://github.com/pre-commit/pre-commit-hooks
  rev: v4.0.1
  hooks:
  - id: check-added-large-files
    args: [--maxkb=1025]
  - id: check-case-conflict
  - id: check-executables-have-shebangs
    exclude: 'pre\-commit\-config\.yaml'
  - id: check-shebang-scripts-are-executable
  - id: check-merge-conflict
  - id: check-symlinks
  - id: destroyed-symlinks
    name: Detect destroyed symlinks
  - id: detect-private-key
  # - id: no-commit-to-branch
  #   name: Prevent commits to wrong branch
  #   args: [--branch, master, --pattern, 'v?\d{1,3}\.x']


# Commit message hooks #

# Check that commit message follows basic rules
- repo: https://github.com/jorisroovers/gitlint
  rev: v0.15.1
  hooks:
  - id: gitlint
    name: Check commit message

# Check commit message spelling
- repo: https://github.com/codespell-project/codespell
  rev: v2.1.0
  hooks:
  - id: codespell
    name: Check commit message spelling
    stages: [commit-msg]
